import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    static long getWays(long n, long[] c){
        // Complete this function
        long[][] total=new long[c.length+1][(int)n+1];
        for(int i=0;i<=c.length;i++)
        {
        total[i][0]=1;
        }
        
        for(int i=1;i<=c.length;i++)
        {
          for(int j=1;j<=n;j++)
          {
             if(j<c[i-1])
             {
                 total[i][j]=total[i-1][j];
             }
              else
              {
                  total[i][j]=total[i-1][j]+total[i][j-(int)c[i-1]];
              }
          }
        }
        return total[c.length][(int)n];
        
            
    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        long[] c = new long[m];
        for(int c_i=0; c_i < m; c_i++){
            c[c_i] = in.nextLong();
        }
        
        // Print the number of ways of making change for 'n' units using coins having the values given by 'c'
        long ways = getWays(n, c);
        System.out.println(ways);
    }
}
